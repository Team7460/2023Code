Index: src/main/java/frc/robot/Robot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Copyright (c) FIRST and other WPILib contributors.\r\n// Open Source Software; you can modify and/or share it under the terms of\r\n// the WPILib BSD license file in the root directory of this project.\r\n\r\npackage frc.robot;\r\n\r\nimport edu.wpi.first.wpilibj.TimedRobot;\r\nimport edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;\r\nimport edu.wpi.first.wpilibj2.command.Command;\r\nimport edu.wpi.first.wpilibj2.command.CommandScheduler;\r\n\r\n/**\r\n * The VM is configured to automatically run this class, and to call the functions corresponding to\r\n * each mode, as described in the TimedRobot documentation. If you change the name of this class or\r\n * the package after creating this project, you must also update the build.gradle file in the\r\n * project.\r\n */\r\npublic class Robot extends TimedRobot {\r\n  private Command m_autonomousCommand;\r\n\r\n  private RobotContainer m_robotContainer;\r\n\r\n  /**\r\n   * This function is run when the robot is first started up and should be used for any\r\n   * initialization code.\r\n   */\r\n  @Override\r\n  public void robotInit() {\r\n    // Instantiate our RobotContainer.  This will perform all our button bindings, and put our\r\n    // autonomous chooser on the dashboard.\r\n    m_robotContainer = new RobotContainer();\r\n  }\r\n\r\n  /**\r\n   * This function is called every 20 ms, no matter the mode. Use this for items like diagnostics\r\n   * that you want ran during disabled, autonomous, teleoperated and test.\r\n   *\r\n   * <p>This runs after the mode specific periodic functions, but before LiveWindow and\r\n   * SmartDashboard integrated updating.\r\n   */\r\n  @Override\r\n  public void robotPeriodic() {\r\n    // Runs the Scheduler.  This is responsible for polling buttons, adding newly-scheduled\r\n    // commands, running already-scheduled commands, removing finished or interrupted commands,\r\n    // and running subsystem periodic() methods.  This must be called from the robot's periodic\r\n    // block in order for anything in the Command-based framework to work.\r\n    CommandScheduler.getInstance().run();\r\n    SmartDashboard.putString(\"heading\", m_robotContainer.m_robotDrive.m_gyro.getRotation2d().toString());\r\n    SmartDashboard.putBoolean(\"isConnected\", m_robotContainer.m_robotDrive.m_gyro.isConnected());\r\n  }\r\n\r\n  /** This function is called once each time the robot enters Disabled mode. */\r\n  @Override\r\n  public void disabledInit() {}\r\n\r\n  @Override\r\n  public void disabledPeriodic() {}\r\n\r\n  /** This autonomous runs the autonomous command selected by your {@link RobotContainer} class. */\r\n  @Override\r\n  public void autonomousInit() {\r\n    m_autonomousCommand = m_robotContainer.getAutonomousCommand();\r\n\r\n    // schedule the autonomous command (example)\r\n    if (m_autonomousCommand != null) {\r\n      m_autonomousCommand.schedule();\r\n    }\r\n  }\r\n\r\n  /** This function is called periodically during autonomous. */\r\n  @Override\r\n  public void autonomousPeriodic() {}\r\n\r\n  @Override\r\n  public void teleopInit() {\r\n    // This makes sure that the autonomous stops running when\r\n    // teleop starts running. If you want the autonomous to\r\n    // continue until interrupted by another command, remove\r\n    // this line or comment it out.\r\n    if (m_autonomousCommand != null) {\r\n      m_autonomousCommand.cancel();\r\n    }\r\n  }\r\n\r\n  /** This function is called periodically during operator control. */\r\n  @Override\r\n  public void teleopPeriodic() {}\r\n\r\n  @Override\r\n  public void testInit() {\r\n    // Cancels all running commands at the start of test mode.\r\n    CommandScheduler.getInstance().cancelAll();\r\n  }\r\n\r\n  /** This function is called periodically during test mode. */\r\n  @Override\r\n  public void testPeriodic() {}\r\n\r\n  /** This function is called once when the robot is first started up. */\r\n  @Override\r\n  public void simulationInit() {}\r\n\r\n  /** This function is called periodically whilst in simulation. */\r\n  @Override\r\n  public void simulationPeriodic() {}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/frc/robot/Robot.java b/src/main/java/frc/robot/Robot.java
--- a/src/main/java/frc/robot/Robot.java	(revision d7dc02503fa2c8647a2149ef4f4118a2f5010e00)
+++ b/src/main/java/frc/robot/Robot.java	(date 1675903992634)
@@ -4,6 +4,7 @@
 
 package frc.robot;
 
+import com.pathplanner.lib.server.PathPlannerServer;
 import edu.wpi.first.wpilibj.TimedRobot;
 import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
 import edu.wpi.first.wpilibj2.command.Command;
Index: simgui-ds.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"FMS\": {\r\n    \"window\": {\r\n      \"visible\": false\r\n    }\r\n  },\r\n  \"keyboardJoysticks\": [\r\n    {\r\n      \"axisConfig\": [\r\n        {\r\n          \"decKey\": 65,\r\n          \"incKey\": 68\r\n        },\r\n        {\r\n          \"decKey\": 87,\r\n          \"incKey\": 83\r\n        },\r\n        {\r\n          \"decKey\": 69,\r\n          \"decayRate\": 0.0,\r\n          \"incKey\": 82,\r\n          \"keyRate\": 0.009999999776482582\r\n        }\r\n      ],\r\n      \"axisCount\": 3,\r\n      \"buttonCount\": 4,\r\n      \"buttonKeys\": [\r\n        90,\r\n        88,\r\n        67,\r\n        86\r\n      ],\r\n      \"povConfig\": [\r\n        {\r\n          \"key0\": 328,\r\n          \"key135\": 323,\r\n          \"key180\": 322,\r\n          \"key225\": 321,\r\n          \"key270\": 324,\r\n          \"key315\": 327,\r\n          \"key45\": 329,\r\n          \"key90\": 326\r\n        }\r\n      ],\r\n      \"povCount\": 1\r\n    },\r\n    {\r\n      \"axisConfig\": [\r\n        {\r\n          \"decKey\": 74,\r\n          \"incKey\": 76\r\n        },\r\n        {\r\n          \"decKey\": 73,\r\n          \"incKey\": 75\r\n        }\r\n      ],\r\n      \"axisCount\": 2,\r\n      \"buttonCount\": 4,\r\n      \"buttonKeys\": [\r\n        77,\r\n        44,\r\n        46,\r\n        47\r\n      ],\r\n      \"povCount\": 0\r\n    },\r\n    {\r\n      \"axisConfig\": [\r\n        {\r\n          \"decKey\": 263,\r\n          \"incKey\": 262\r\n        },\r\n        {\r\n          \"decKey\": 265,\r\n          \"incKey\": 264\r\n        }\r\n      ],\r\n      \"axisCount\": 2,\r\n      \"buttonCount\": 6,\r\n      \"buttonKeys\": [\r\n        260,\r\n        268,\r\n        266,\r\n        261,\r\n        269,\r\n        267\r\n      ],\r\n      \"povCount\": 0\r\n    },\r\n    {\r\n      \"axisCount\": 0,\r\n      \"buttonCount\": 0,\r\n      \"povCount\": 0\r\n    }\r\n  ]\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/simgui-ds.json b/simgui-ds.json
--- a/simgui-ds.json	(revision d7dc02503fa2c8647a2149ef4f4118a2f5010e00)
+++ b/simgui-ds.json	(date 1675901868322)
@@ -1,9 +1,4 @@
 {
-  "FMS": {
-    "window": {
-      "visible": false
-    }
-  },
   "keyboardJoysticks": [
     {
       "axisConfig": [
Index: .run/Build & Deploy Robot.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Build & Deploy Robot.run.xml b/.run/Build & Deploy Robot.run.xml
new file mode 100644
--- /dev/null	(date 1675900844048)
+++ b/.run/Build & Deploy Robot.run.xml	(date 1675900844048)
@@ -0,0 +1,23 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Build &amp; Deploy Robot" type="GradleRunConfiguration" factoryName="Gradle">
+    <ExternalSystemSettings>
+      <option name="executionName" />
+      <option name="externalProjectPath" value="$PROJECT_DIR$" />
+      <option name="externalSystemIdString" value="GRADLE" />
+      <option name="scriptParameters" />
+      <option name="taskDescriptions">
+        <list />
+      </option>
+      <option name="taskNames">
+        <list>
+          <option value="deploy" />
+        </list>
+      </option>
+      <option name="vmOptions" />
+    </ExternalSystemSettings>
+    <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+    <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+    <DebugAllEnabled>false</DebugAllEnabled>
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: vendordeps/PathplannerLib.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n    \"fileName\": \"PathplannerLib.json\",\r\n    \"name\": \"PathplannerLib\",\r\n    \"version\": \"2023.4.0\",\r\n    \"uuid\": \"1b42324f-17c6-4875-8e77-1c312bc8c786\",\r\n    \"mavenUrls\": [\r\n        \"https://3015rangerrobotics.github.io/pathplannerlib/repo\"\r\n    ],\r\n    \"jsonUrl\": \"https://3015rangerrobotics.github.io/pathplannerlib/PathplannerLib.json\",\r\n    \"javaDependencies\": [\r\n        {\r\n            \"groupId\": \"com.pathplanner.lib\",\r\n            \"artifactId\": \"PathplannerLib-java\",\r\n            \"version\": \"2023.4.0\"\r\n        }\r\n    ],\r\n    \"jniDependencies\": [],\r\n    \"cppDependencies\": [\r\n        {\r\n            \"groupId\": \"com.pathplanner.lib\",\r\n            \"artifactId\": \"PathplannerLib-cpp\",\r\n            \"version\": \"2023.4.0\",\r\n            \"libName\": \"PathplannerLib\",\r\n            \"headerClassifier\": \"headers\",\r\n            \"sharedLibrary\": false,\r\n            \"skipInvalidPlatforms\": true,\r\n            \"binaryPlatforms\": [\r\n                \"windowsx86-64\",\r\n                \"linuxx86-64\",\r\n                \"osxuniversal\",\r\n                \"linuxathena\"\r\n            ]\r\n        }\r\n    ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendordeps/PathplannerLib.json b/vendordeps/PathplannerLib.json
--- a/vendordeps/PathplannerLib.json	(revision d7dc02503fa2c8647a2149ef4f4118a2f5010e00)
+++ b/vendordeps/PathplannerLib.json	(date 1675900961100)
@@ -1,7 +1,7 @@
 {
     "fileName": "PathplannerLib.json",
     "name": "PathplannerLib",
-    "version": "2023.4.0",
+    "version": "2023.4.1",
     "uuid": "1b42324f-17c6-4875-8e77-1c312bc8c786",
     "mavenUrls": [
         "https://3015rangerrobotics.github.io/pathplannerlib/repo"
@@ -11,7 +11,7 @@
         {
             "groupId": "com.pathplanner.lib",
             "artifactId": "PathplannerLib-java",
-            "version": "2023.4.0"
+            "version": "2023.4.1"
         }
     ],
     "jniDependencies": [],
@@ -19,7 +19,7 @@
         {
             "groupId": "com.pathplanner.lib",
             "artifactId": "PathplannerLib-cpp",
-            "version": "2023.4.0",
+            "version": "2023.4.1",
             "libName": "PathplannerLib",
             "headerClassifier": "headers",
             "sharedLibrary": false,
@@ -32,4 +32,4 @@
             ]
         }
     ]
-}
\ No newline at end of file
+}
Index: .run/Build Robot.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Build Robot.run.xml b/.run/Build Robot.run.xml
new file mode 100644
--- /dev/null	(date 1675900844138)
+++ b/.run/Build Robot.run.xml	(date 1675900844138)
@@ -0,0 +1,23 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Build Robot" type="GradleRunConfiguration" factoryName="Gradle">
+    <ExternalSystemSettings>
+      <option name="executionName" />
+      <option name="externalProjectPath" value="$PROJECT_DIR$" />
+      <option name="externalSystemIdString" value="GRADLE" />
+      <option name="scriptParameters" />
+      <option name="taskDescriptions">
+        <list />
+      </option>
+      <option name="taskNames">
+        <list>
+          <option value="build" />
+        </list>
+      </option>
+      <option name="vmOptions" />
+    </ExternalSystemSettings>
+    <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+    <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+    <DebugAllEnabled>false</DebugAllEnabled>
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: .run/Build & Deploy Robot for Debugging.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Build & Deploy Robot for Debugging.run.xml b/.run/Build & Deploy Robot for Debugging.run.xml
new file mode 100644
--- /dev/null	(date 1675900844078)
+++ b/.run/Build & Deploy Robot for Debugging.run.xml	(date 1675900844078)
@@ -0,0 +1,23 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Build &amp; Deploy Robot for Debugging" type="GradleRunConfiguration" factoryName="Gradle">
+    <ExternalSystemSettings>
+      <option name="executionName" />
+      <option name="externalProjectPath" value="$PROJECT_DIR$" />
+      <option name="externalSystemIdString" value="GRADLE" />
+      <option name="scriptParameters" value="-PdebugMode=true" />
+      <option name="taskDescriptions">
+        <list />
+      </option>
+      <option name="taskNames">
+        <list>
+          <option value="deploy" />
+        </list>
+      </option>
+      <option name="vmOptions" />
+    </ExternalSystemSettings>
+    <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+    <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+    <DebugAllEnabled>false</DebugAllEnabled>
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: .run/Clean Build & Deploy Robot.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Clean Build & Deploy Robot.run.xml b/.run/Clean Build & Deploy Robot.run.xml
new file mode 100644
--- /dev/null	(date 1675900844208)
+++ b/.run/Clean Build & Deploy Robot.run.xml	(date 1675900844208)
@@ -0,0 +1,24 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Clean Build &amp; Deploy Robot" type="GradleRunConfiguration" factoryName="Gradle">
+    <ExternalSystemSettings>
+      <option name="executionName" />
+      <option name="externalProjectPath" value="$PROJECT_DIR$" />
+      <option name="externalSystemIdString" value="GRADLE" />
+      <option name="scriptParameters" />
+      <option name="taskDescriptions">
+        <list />
+      </option>
+      <option name="taskNames">
+        <list>
+          <option value="clean" />
+          <option value="deploy" />
+        </list>
+      </option>
+      <option name="vmOptions" />
+    </ExternalSystemSettings>
+    <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+    <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+    <DebugAllEnabled>false</DebugAllEnabled>
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: .run/Clean.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Clean.run.xml b/.run/Clean.run.xml
new file mode 100644
--- /dev/null	(date 1675900844168)
+++ b/.run/Clean.run.xml	(date 1675900844168)
@@ -0,0 +1,23 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Clean" type="GradleRunConfiguration" factoryName="Gradle">
+    <ExternalSystemSettings>
+      <option name="executionName" />
+      <option name="externalProjectPath" value="$PROJECT_DIR$" />
+      <option name="externalSystemIdString" value="GRADLE" />
+      <option name="scriptParameters" />
+      <option name="taskDescriptions">
+        <list />
+      </option>
+      <option name="taskNames">
+        <list>
+          <option value="clean" />
+        </list>
+      </option>
+      <option name="vmOptions" />
+    </ExternalSystemSettings>
+    <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+    <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+    <DebugAllEnabled>false</DebugAllEnabled>
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: .run/Clean Build Robot.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Clean Build Robot.run.xml b/.run/Clean Build Robot.run.xml
new file mode 100644
--- /dev/null	(date 1675900844268)
+++ b/.run/Clean Build Robot.run.xml	(date 1675900844268)
@@ -0,0 +1,24 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Clean Build Robot" type="GradleRunConfiguration" factoryName="Gradle">
+    <ExternalSystemSettings>
+      <option name="executionName" />
+      <option name="externalProjectPath" value="$PROJECT_DIR$" />
+      <option name="externalSystemIdString" value="GRADLE" />
+      <option name="scriptParameters" />
+      <option name="taskDescriptions">
+        <list />
+      </option>
+      <option name="taskNames">
+        <list>
+          <option value="clean" />
+          <option value="build" />
+        </list>
+      </option>
+      <option name="vmOptions" />
+    </ExternalSystemSettings>
+    <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+    <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+    <DebugAllEnabled>false</DebugAllEnabled>
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id \"java\"\r\n    id \"edu.wpi.first.GradleRIO\" version \"2023.2.1\"\r\n}\r\n\r\nsourceCompatibility = JavaVersion.VERSION_11\r\ntargetCompatibility = JavaVersion.VERSION_11\r\n\r\ndef ROBOT_MAIN_CLASS = \"frc.robot.Main\"\r\n\r\n// Define my targets (RoboRIO) and artifacts (deployable files)\r\n// This is added by GradleRIO's backing project DeployUtils.\r\ndeploy {\r\n    targets {\r\n        roborio(getTargetTypeClass('RoboRIO')) {\r\n            // Team number is loaded either from the .wpilib/wpilib_preferences.json\r\n            // or from command line. If not found an exception will be thrown.\r\n            // You can use getTeamOrDefault(team) instead of getTeamNumber if you\r\n            // want to store a team number in this file.\r\n            team = project.frc.getTeamNumber()\r\n            debug = project.frc.getDebugOrDefault(false)\r\n\r\n            artifacts {\r\n                // First part is artifact name, 2nd is artifact type\r\n                // getTargetTypeClass is a shortcut to get the class type using a string\r\n\r\n                frcJava(getArtifactTypeClass('FRCJavaArtifact')) {\r\n                }\r\n\r\n                // Static files artifact\r\n                frcStaticFileDeploy(getArtifactTypeClass('FileTreeArtifact')) {\r\n                    files = project.fileTree('src/main/deploy')\r\n                    directory = '/home/lvuser/deploy'\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ndef deployArtifact = deploy.targets.roborio.artifacts.frcJava\r\n\r\n// Set to true to use debug for JNI.\r\nwpi.java.debugJni = false\r\n\r\n// Set this to true to enable desktop support.\r\ndef includeDesktopSupport = true\r\n\r\n// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.\r\n// Also defines JUnit 5.\r\ndependencies {\r\n    implementation wpi.java.deps.wpilib()\r\n    implementation wpi.java.vendor.java()\r\n\r\n    roborioDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.roborio)\r\n    roborioDebug wpi.java.vendor.jniDebug(wpi.platforms.roborio)\r\n\r\n    roborioRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.roborio)\r\n    roborioRelease wpi.java.vendor.jniRelease(wpi.platforms.roborio)\r\n\r\n    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)\r\n    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)\r\n    simulationDebug wpi.sim.enableDebug()\r\n\r\n    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)\r\n    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)\r\n    simulationRelease wpi.sim.enableRelease()\r\n\r\n    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'\r\n    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'\r\n    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'\r\n}\r\n\r\ntest {\r\n    useJUnitPlatform()\r\n    systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'\r\n}\r\n\r\n// Simulation configuration (e.g. environment variables).\r\nwpi.sim.addGui().defaultEnabled = true\r\nwpi.sim.addDriverstation()\r\n\r\n// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')\r\n// in order to make them all available at runtime. Also adding the manifest so WPILib\r\n// knows where to look for our Robot Class.\r\njar {\r\n    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }\r\n    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)\r\n    duplicatesStrategy = DuplicatesStrategy.INCLUDE\r\n}\r\n\r\n// Configure jar and deploy tasks\r\ndeployArtifact.jarTask = jar\r\nwpi.java.configureExecutableTasks(jar)\r\nwpi.java.configureTestTasks(test)\r\n\r\n// Configure string concat to always inline compile\r\ntasks.withType(JavaCompile) {\r\n    options.compilerArgs.add '-XDstringConcat=inline'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision d7dc02503fa2c8647a2149ef4f4118a2f5010e00)
+++ b/build.gradle	(date 1676220400522)
@@ -1,6 +1,6 @@
 plugins {
     id "java"
-    id "edu.wpi.first.GradleRIO" version "2023.2.1"
+    id "edu.wpi.first.GradleRIO" version "2023.3.2"
 }
 
 sourceCompatibility = JavaVersion.VERSION_11
Index: .run/Clean Build & Deploy Robot for Debugging.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Clean Build & Deploy Robot for Debugging.run.xml b/.run/Clean Build & Deploy Robot for Debugging.run.xml
new file mode 100644
--- /dev/null	(date 1675900844238)
+++ b/.run/Clean Build & Deploy Robot for Debugging.run.xml	(date 1675900844238)
@@ -0,0 +1,24 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Clean Build &amp; Deploy Robot for Debugging" type="GradleRunConfiguration" factoryName="Gradle">
+    <ExternalSystemSettings>
+      <option name="executionName" />
+      <option name="externalProjectPath" value="$PROJECT_DIR$" />
+      <option name="externalSystemIdString" value="GRADLE" />
+      <option name="scriptParameters" value="-PdebugMode=true" />
+      <option name="taskDescriptions">
+        <list />
+      </option>
+      <option name="taskNames">
+        <list>
+          <option value="clean" />
+          <option value="deploy" />
+        </list>
+      </option>
+      <option name="vmOptions" />
+    </ExternalSystemSettings>
+    <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+    <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+    <DebugAllEnabled>false</DebugAllEnabled>
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: .run/Debug Robot via USB.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Debug Robot via USB.run.xml b/.run/Debug Robot via USB.run.xml
new file mode 100644
--- /dev/null	(date 1675900844328)
+++ b/.run/Debug Robot via USB.run.xml	(date 1675900844328)
@@ -0,0 +1,12 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Debug Robot via USB" type="Remote">
+    <module name="2023Code.main" />
+    <option name="USE_SOCKET_TRANSPORT" value="true" />
+    <option name="SERVER_MODE" value="false" />
+    <option name="SHMEM_ADDRESS" value="javadebug" />
+    <option name="HOST" value="172.22.11.2" />
+    <option name="PORT" value="8349" />
+    <option name="AUTO_RESTART" value="false" />
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: .run/Debug Robot via IP.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Debug Robot via IP.run.xml b/.run/Debug Robot via IP.run.xml
new file mode 100644
--- /dev/null	(date 1675901814341)
+++ b/.run/Debug Robot via IP.run.xml	(date 1675901814341)
@@ -0,0 +1,16 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Debug Robot via IP" type="Remote">
+    <module name="2023Code.main" />
+    <option name="USE_SOCKET_TRANSPORT" value="true" />
+    <option name="SERVER_MODE" value="false" />
+    <option name="SHMEM_ADDRESS" value="javadebug" />
+    <option name="HOST" value="10.74.60.2" />
+    <option name="PORT" value="8349" />
+    <option name="AUTO_RESTART" value="false" />
+    <RunnerSettings RunnerId="Debug">
+      <option name="DEBUG_PORT" value="8349" />
+      <option name="LOCAL" value="false" />
+    </RunnerSettings>
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: .run/Clean Build & Run Simulate Java.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Clean Build & Run Simulate Java.run.xml b/.run/Clean Build & Run Simulate Java.run.xml
new file mode 100644
--- /dev/null	(date 1675900844398)
+++ b/.run/Clean Build & Run Simulate Java.run.xml	(date 1675900844398)
@@ -0,0 +1,24 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Clean Build &amp; Run Simulate Java" type="GradleRunConfiguration" factoryName="Gradle">
+    <ExternalSystemSettings>
+      <option name="executionName" />
+      <option name="externalProjectPath" value="$PROJECT_DIR$" />
+      <option name="externalSystemIdString" value="GRADLE" />
+      <option name="scriptParameters" />
+      <option name="taskDescriptions">
+        <list />
+      </option>
+      <option name="taskNames">
+        <list>
+          <option value="clean" />
+          <option value="simulateJava" />
+        </list>
+      </option>
+      <option name="vmOptions" />
+    </ExternalSystemSettings>
+    <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+    <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+    <DebugAllEnabled>false</DebugAllEnabled>
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: .run/Build & Run Simulate Java.run.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.run/Build & Run Simulate Java.run.xml b/.run/Build & Run Simulate Java.run.xml
new file mode 100644
--- /dev/null	(date 1675900844368)
+++ b/.run/Build & Run Simulate Java.run.xml	(date 1675900844368)
@@ -0,0 +1,23 @@
+<component name="ProjectRunConfigurationManager">
+  <configuration default="false" name="Build &amp; Run Simulate Java" type="GradleRunConfiguration" factoryName="Gradle">
+    <ExternalSystemSettings>
+      <option name="executionName" />
+      <option name="externalProjectPath" value="$PROJECT_DIR$" />
+      <option name="externalSystemIdString" value="GRADLE" />
+      <option name="scriptParameters" />
+      <option name="taskDescriptions">
+        <list />
+      </option>
+      <option name="taskNames">
+        <list>
+          <option value="simulateJava" />
+        </list>
+      </option>
+      <option name="vmOptions" />
+    </ExternalSystemSettings>
+    <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+    <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+    <DebugAllEnabled>false</DebugAllEnabled>
+    <method v="2" />
+  </configuration>
+</component>
\ No newline at end of file
Index: simgui.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"NTProvider\": {\r\n    \"types\": {\r\n      \"/FMSInfo\": \"FMSInfo\"\r\n    }\r\n  },\r\n  \"NetworkTables\": {\r\n    \"transitory\": {\r\n      \"FMSInfo\": {\r\n        \"open\": true\r\n      },\r\n      \"LiveWindow\": {\r\n        \"open\": true\r\n      },\r\n      \"Shuffleboard\": {\r\n        \"open\": true\r\n      }\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/simgui.json b/simgui.json
--- a/simgui.json	(revision d7dc02503fa2c8647a2149ef4f4118a2f5010e00)
+++ b/simgui.json	(date 1675901868322)
@@ -1,4 +1,18 @@
 {
+  "HALProvider": {
+    "Other Devices": {
+      "SPARK MAX [17]": {
+        "header": {
+          "open": true
+        }
+      },
+      "navX-Sensor[0]": {
+        "header": {
+          "open": true
+        }
+      }
+    }
+  },
   "NTProvider": {
     "types": {
       "/FMSInfo": "FMSInfo"
